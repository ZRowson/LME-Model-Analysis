random = reStruct(~poly(t,degree=1,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
plot(lmm.L, residuals(.) ~ fitted(.), main="Light Phase: Residuals v. Fitted Values Level = 1", abline = 0)
plot(lmm.D, residuals(.) ~ fitted(.), main="Dark Phase: Residuals v. Fitted Values Level = 1", abline = 0)
# Transform data
lmm.L.1 <- update(lmm.L, weights=varConstPower())
plot(lmm.L.1, residuals(.) ~ fitted(.), main="Light Phase: Variance Function Added Level = 1", abline = 0)
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
library(nlme)
library(lattice)
library(data.table)
library(ggplot2)
library(gabi)
load("../data/Padilla_DNT60_Loperamide.rda")
# Split Light
data <- copy(Padilla_DNT60_Loperamide)
data.L <- Padilla_DNT60_Loperamide[t%in%11:30]
data.D <- Padilla_DNT60_Loperamide[t%in%31:50]
# Shift time measurements and save concentration as a factor
data.L$t <- data.L$t - min(data.L$t)
data.L$conc <- as.factor(data.L$conc)
data.D$t <- data.D$t - min(data.D$t)
data.D$conc <- as.factor(data.D$conc)
# Identify individuals to remove
remove <- Padilla_DNT60_Loperamide[is.na(y), unique(fishID)]
# Add well location, inside vs. outside, as co-variate
data.L[rowi%in%c(1,8), well_loc:="outside"][coli%in%c(1,12), well_loc:="outside"]
data.L[is.na(well_loc), well_loc:="inside"]
data.D[rowi%in%c(1,8), well_loc:="outside"][coli%in%c(1,12), well_loc:="outside"]
data.D[is.na(well_loc), well_loc:="inside"]
# Transform data
data.L.sqrt <- copy(data.L)
data.L.sqrt[, sqrty := sqrt(y)]
data.D.sqrt <- copy(data.D)
data.D.sqrt[, sqrty := sqrt(y)]
Light.sqrt <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data.L.sqrt[!(fishID%in%remove)]), order.groups = FALSE)
Dark.sqrt <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data.D.sqrt[!(fishID%in%remove)]), order.groups = FALSE)
avg_func <- function(...) {
avg <- mean(...,na.rm=TRUE)
SE <- stats::sd(..., na.rm=TRUE) / sqrt(length(...))
data.frame(y=avg, ymin=avg-SE, ymax=avg+SE)
}
# Plots
ggplot(data.D.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Light Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
ggplot(data.D.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Dark Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
avg_func <- function(...) {
avg <- mean(...,na.rm=TRUE)
SE <- stats::sd(..., na.rm=TRUE) / sqrt(length(...))
data.frame(y=avg, ymin=avg-SE, ymax=avg+SE)
}
# Plots
ggplot(data.L.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Light Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
ggplot(data.D.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Dark Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
lmm6 <- lme(sqrty ~ conc*poly(t,degree=6,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=6,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
ctrl <- lmeControl(opt = "optim", niterEM = 200, msTol = 1e-20, msMaxIter = 1000, apVar = FALSE)
lmm6 <- lme(sqrty ~ conc*poly(t,degree=6,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=6,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
lmm4 <- lme(sqrty ~ conc*poly(t,degree=4,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=4,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
plot(lmm4)
qqnorm(lmm4, resid(.))
qqnorm(resid(lmm4))
qqline(resid(lmm4))
plot(lmm4, sqrty ~ fitted(.))
plot(lmm4, sqrty ~ fitted(.), abline=c(0,1))
plot(lmm4, fitted(.) ~ sqrty, abline=c(0,1))
lmm2 <- lme(sqrty ~ conc*poly(t,degree=2,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=2,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
lmm2 <- lme(sqrty ~ conc*poly(t,degree=2,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=2,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
lmm4 <- lme(sqrty ~ conc*poly(t,degree=4,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=4,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
normAIC <- function(zz) {
zz$AIC <- zz$AIC - min(zz$AIC)
indx <- order(zz$AIC)
zz[indx,]
}
zz <- AIC(lmm2, lmm4)
normAIC(zz)
lmm5 <- lme(sqrty ~ conc*poly(t,degree=5,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=5,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
zz <- AIC(lmm2, lmm4, lmm5)
normAIC(zz)
lmm5 <- lme(sqrty ~ conc*poly(t,degree=6,raw=TRUE),
data = Light.sqrt,
random = reStruct(~poly(t,degree=6,raw=TRUE)|fishID,REML=FALSE,pdClass="pdSymm"),
correlation = corAR1(,form=~t|fishID),
method = "ML",
control = ctrl)
head(Indometh)
Light.sqrt.nls <- nls(sqrty ~ SSlogis(t, phi1, phi2, phi3)
data = Light.sqrt)
Light.sqrt.nls <- nls(sqrty ~ SSlogis(t, phi1, phi2, phi3),
data = Light.sqrt)
summary(Light.sqrt.nls)
Light.sqrt.nls <- nls(sqrty ~ SSlogis(t, A1, phi1, phi2),
data = Light.sqrt)
summary(Light.sqrt.nls)
?plot
nls.Light <- nls(sqrty ~ SSlogis(t, A1, phi1, phi2),
data = Light.sqrt)
plot(nls.Light, Subject ~ resid(.), abline = 0)
nls.Light <- nls(sqrty ~ SSlogis(t, A1, phi1, phi2),
data = Light.sqrt)
plot(nls.Light, fishID ~ resid(.), abline = 0)
plot(nls.Light)
sample(light.sqrt$fishID, 20)
sample <- sample(Light.sqrt$fishID, 20)
plot(nls.Light, fishID ~ resid(.), abline = 0, subset=sample)
nls.Light <- nlsList(sqrty ~ SSlogis(t, A1, phi1, phi2),
data = Light.sqrt)
head(Light.sqrt)
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
library(nlme)
library(lattice)
library(data.table)
library(ggplot2)
library(gabi)
load("../data/Padilla_DNT60_Loperamide.rda")
# Split Light
data <- copy(Padilla_DNT60_Loperamide)
data.L <- Padilla_DNT60_Loperamide[t%in%11:30]
data.D <- Padilla_DNT60_Loperamide[t%in%31:50]
# Shift time measurements and save concentration as a factor
data.L$t <- data.L$t - min(data.L$t)
data.L$conc <- as.factor(data.L$conc)
data.D$t <- data.D$t - min(data.D$t)
data.D$conc <- as.factor(data.D$conc)
# Identify individuals to remove
remove <- Padilla_DNT60_Loperamide[is.na(y), unique(fishID)]
View(data.D)
load("../data/Padilla_DNT60_Loperamide.rda")
# Split Light
data <- copy(Padilla_DNT60_Loperamide)
data.L <- Padilla_DNT60_Loperamide[t%in%11:30]
data.D <- Padilla_DNT60_Loperamide[t%in%31:50]
# Shift time measurements and save concentration as a factor
data.L$t <- data.L$t - mean(data.L$t)
data.L$conc <- as.factor(data.L$conc)
data.D$t <- data.D$t - mean(data.D$t)
data.D$conc <- as.factor(data.D$conc)
# Identify individuals to remove
remove <- Padilla_DNT60_Loperamide[is.na(y), unique(fishID)]
View(data.D)
View(data.L)
load("../data/Padilla_DNT60_Loperamide.rda")
# Split Light
data <- copy(Padilla_DNT60_Loperamide)
data.L <- Padilla_DNT60_Loperamide[t%in%11:30]
data.D <- Padilla_DNT60_Loperamide[t%in%31:50]
# Shift time measurements and save concentration as a factor
data.L$t <- data.L$t - mean(data.L$t)
data.L$conc <- as.factor(data.L$conc)
data.D$t <- data.D$t - mean(data.D$t)
data.D$conc <- as.factor(data.D$conc)
# Identify individuals to remove
remove <- Padilla_DNT60_Loperamide[is.na(y), unique(fishID)]
# Add well location, inside vs. outside, as co-variate
data.L[rowi%in%c(1,8), well_loc:="outside"][coli%in%c(1,12), well_loc:="outside"]
data.L[is.na(well_loc), well_loc:="inside"]
data.D[rowi%in%c(1,8), well_loc:="outside"][coli%in%c(1,12), well_loc:="outside"]
data.D[is.na(well_loc), well_loc:="inside"]
# Transform data
data.L.sqrt <- copy(data.L)
data.L.sqrt[, sqrty := sqrt(y)]
data.D.sqrt <- copy(data.D)
data.D.sqrt[, sqrty := sqrt(y)]
Light.sqrt <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data.L.sqrt[!(fishID%in%remove)]), order.groups = FALSE)
Dark.sqrt <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data.D.sqrt[!(fishID%in%remove)]), order.groups = FALSE)
avg_func <- function(...) {
avg <- mean(...,na.rm=TRUE)
SE <- stats::sd(..., na.rm=TRUE) / sqrt(length(...))
data.frame(y=avg, ymin=avg-SE, ymax=avg+SE)
}
# Plots
ggplot(data.L.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Light Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
ggplot(data.D.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Dark Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
nls.Light <- nlsList(sqrty ~ SSlogis(t, A1, phi1, phi2),
data = Light.sqrt)
sample <- sample(Light.sqrt$fishID, 20)
plot(nls.Light, fishID ~ resid(.), abline = 0, subset=sample)
nlsList()
nls.Light
data.L.sqrt[fishID=="DNT-47.1."]
data.L.sqrt[fishID=="DNT-47.1.7"]
ggplot(data.L.sqrt[fishID=="DNT-47.1.7"], aes(x=t,y=sqrty)) + geom_line()
nls.Light <- nlsList(sqrty ~ SSfpl(t, A1, phi1, phi2),
data = Light.sqrt)
intervals(nls.Light)
?nlsList
ctrl <- lmeControl(opt = "optim", niterEM = 200, msTol = 1e-20, msMaxIter = 1000, apVar = FALSE)
nls.Light <- nlsList(sqrty ~ SSfpl(t, A1, phi1, phi2),
data = Light.sqrt,
control = ctrl)
nls.Light <- nlsList(sqrty ~ SSfpl(t, phi1, phi2, phi3, phi4),
data = Light.sqrt,
control = ctrl)
nlmm.Light <- nlme(sqrty ~ SSfpl(t, phi1, phi2, phi3, phi4),
random = pdDiag(phi1 + phi2 + phi3 + phi4 ~ 1),
data = Light.sqrt,
control = ctrl)
head(data)
data[wllt==v, unique(fishID)]
data[wllt=="v", unique(fishID)]
length(data[wllt=="v", unique(fishID)])
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
library(nlme)
library(lattice)
library(data.table)
library(ggplot2)
library(gabi)
fishDample <- sample( data[wllt=="v", unique(fishID)],
16 )
fishSample <- sample( data[wllt=="v", unique(fishID)],
16 )
fishSample
data[fishID%in%fishSample]
fishSample <- sample(data[wllt=="v" & !(fishID%in%remove), unique(fishID)], 16)
fishSample
fishSample <- sample(data[wllt=="v" & !(fishID%in%remove), unique(fishID)], 16)
data_sample <- data[fishID%in%fishSample]
data_sample.L <- Padilla_DNT60_Loperamide[t%in%11:30]
# Shift time measurements and save concentration as a factor
data_sample.L$t <- data_sample.L$t - mean(data_sample.L$t)
data_sample.L$conc <- as.factor(data_sample.L$conc)
# Transform data
data_sample_sample.L.sqrt <- copy(data_sample.L)
data_sample.L.sqrt[, sqrty := sqrt(y)]
fishSample <- sample(data[wllt=="v" & !(fishID%in%remove), unique(fishID)], 16)
data_sample <- data[fishID%in%fishSample]
data_sample.L <- Padilla_DNT60_Loperamide[t%in%11:30]
# Shift time measurements and save concentration as a factor
data_sample.L$t <- data_sample.L$t - mean(data_sample.L$t)
data_sample.L$conc <- as.factor(data_sample.L$conc)
# Transform data
data_sample.L.sqrt <- copy(data_sample.L)
data_sample.L.sqrt[, sqrty := sqrt(y)]
rm(data_sample_sample.L.sqrt)
sample.L <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data.L.sqrt[!(fishID%in%remove)]), order.groups = FALSE)
ggplot(sample.L, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Light Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
sample.L <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data_sample.L.sqrt),
order.groups = FALSE)
ggplot(sample.L, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Light Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
View(data_sample.L.sqrt)
data[wllt=="v" & !(fishID%in%remove), unique(fishID)]
ctrlFishID <- data[wllt=="v" & !(fishID%in%remove), unique(fishID)]
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
library(nlme)
library(lattice)
library(data.table)
library(ggplot2)
library(gabi)
load("../data/Padilla_DNT60_Loperamide.rda")
# Split Light
data <- copy(Padilla_DNT60_Loperamide)
data.L <- Padilla_DNT60_Loperamide[t%in%11:30]
data.D <- Padilla_DNT60_Loperamide[t%in%31:50]
# Shift time measurements and save concentration as a factor
data.L$t <- data.L$t - mean(data.L$t)
data.L$conc <- as.factor(data.L$conc)
data.D$t <- data.D$t - mean(data.D$t)
data.D$conc <- as.factor(data.D$conc)
# Identify individuals to remove
remove <- Padilla_DNT60_Loperamide[is.na(y), unique(fishID)]
avg_func <- function(...) {
avg <- mean(...,na.rm=TRUE)
SE <- stats::sd(..., na.rm=TRUE) / sqrt(length(...))
data.frame(y=avg, ymin=avg-SE, ymax=avg+SE)
}
normAIC <- function(zz) {
zz$AIC <- zz$AIC - min(zz$AIC)
indx <- order(zz$AIC)
zz[indx,]
}
ctrlFishID <- data[wllt=="v" & !(fishID%in%remove), unique(fishID)]
fishSample <- sample(ctrlFishID, unique(fishID)], 16)
ctrlFishID <- data[wllt=="v" & !(fishID%in%remove), unique(fishID)]
fishSample <- sample(ctrlFishID, 16)
data_sample <- data[fishID%in%fishSample]
data_sample.L <- Padilla_DNT60_Loperamide[t%in%11:30]
# Shift time measurements and save concentration as a factor
data_sample.L$t <- data_sample.L$t - mean(data_sample.L$t)
data_sample.L$conc <- as.factor(data_sample.L$conc)
# Transform data
data_sample.L.sqrt <- copy(data_sample.L)
data_sample.L.sqrt[, sqrty := sqrt(y)]
ctrlFishID <- data[wllt=="v" & !(fishID%in%remove), unique(fishID)]
fishSample <- sample(ctrlFishID, 16)
data_sample <- data[fishID%in%fishSample]
data_sample.L <- data_sample[t%in%11:30]
# Shift time measurements and save concentration as a factor
data_sample.L$t <- data_sample.L$t - mean(data_sample.L$t)
data_sample.L$conc <- as.factor(data_sample.L$conc)
# Transform data
data_sample.L.sqrt <- copy(data_sample.L)
data_sample.L.sqrt[, sqrty := sqrt(y)]
ctrlFishID <- data[wllt=="v" & !(fishID%in%remove), unique(fishID)]
fishSample <- sample(ctrlFishID, 16)
data_sample <- data[fishID%in%fishSample]
data_sample.L <- data_sample[t%in%11:30]
# Shift time measurements and save concentration as a factor
data_sample.L$t <- data_sample.L$t - mean(data_sample.L$t)
data_sample.L$conc <- as.factor(data_sample.L$conc)
# Transform data
data_sample.L.sqrt <- copy(data_sample.L)
data_sample.L.sqrt[, sqrty := sqrt(y)]
sample.L <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data_sample.L.sqrt),
order.groups = FALSE)
ggplot(sample.L, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Light Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
ggplot(sample.L, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide 16 Control Fish: Light Data Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
ggplot(sample.L, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Exposure 16 Control Fish: Light Data Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
knitr::opts_chunk$set(echo = TRUE, cache=TRUE)
library(nlme)
library(lattice)
library(data.table)
library(ggplot2)
library(gabi)
logistInit <- function(mCall, LHS, data) {
xy <- nlme::sortedXyData(mCall[["x"]], LHS, data)
if(nrow(xy) < 3) {
stop("Too few distinct input values to fit a logistic")
}
AsymU <- max(abs(xy[,"y"]))
AsymL <- min(abs(xy[,"y"]))
xmid <- NLSstClosestX(xy, 0.5 * AsymU)
scal <- NLSstClosestX(xy, 0.75 * AsymU) - xmid
value <- c(AsymU, AsymL, xmid, scal)
names(value) <- mCall[c("AsymU","AsymL","xmid","scal")]
value
}
logist1 <- selfStart(logist, initial = logistInit)
logist <- deriv( ~(AsymL-AsymU) / (1 + exp(-(x-xmid)/scal)),
c("AsymU", "AsymL", "xmid", "scal"),
function(x, AsymU, AsymL, xmid, scal) {})
logist1 <- selfStart(logist, initial = logistInit)
getInitial(sqrty ~ logist1(t, AsymU, AsymL, xmid, scal),
data = sample.L)
logistInit <- function(mCall, LHS, data) {
xy <- sortedXyData(mCall[["x"]], LHS, data)
if(nrow(xy) < 3) {
stop("Too few distinct input values to fit a logistic")
}
AsymU <- max(abs(xy[,"y"]))
AsymL <- min(abs(xy[,"y"]))
xmid <- NLSstClosestX(xy, 0.5 * AsymU)
scal <- NLSstClosestX(xy, 0.75 * AsymU) - xmid
value <- c(AsymU, AsymL, xmid, scal)
names(value) <- mCall[c("AsymU","AsymL","xmid","scal")]
value
}
logist1 <- selfStart(logist, initial = logistInit)
getInitial(sqrty ~ logist1(t, AsymU, AsymL, xmid, scal),
data = sample.L)
load("../data/Padilla_DNT60_Loperamide.rda")
# Split Light
data <- copy(Padilla_DNT60_Loperamide)
data.L <- Padilla_DNT60_Loperamide[t%in%11:30]
data.D <- Padilla_DNT60_Loperamide[t%in%31:50]
# Shift time measurements and save concentration as a factor
data.L$t <- data.L$t - mean(data.L$t)
data.L$conc <- as.factor(data.L$conc)
data.D$t <- data.D$t - mean(data.D$t)
data.D$conc <- as.factor(data.D$conc)
# Identify individuals to remove
remove <- Padilla_DNT60_Loperamide[is.na(y), unique(fishID)]
# Add well location, inside vs. outside, as co-variate
data.L[rowi%in%c(1,8), well_loc:="outside"][coli%in%c(1,12), well_loc:="outside"]
data.L[is.na(well_loc), well_loc:="inside"]
data.D[rowi%in%c(1,8), well_loc:="outside"][coli%in%c(1,12), well_loc:="outside"]
data.D[is.na(well_loc), well_loc:="inside"]
# Transform data
data.L.sqrt <- copy(data.L)
data.L.sqrt[, sqrty := sqrt(y)]
data.D.sqrt <- copy(data.D)
data.D.sqrt[, sqrty := sqrt(y)]
Light.sqrt <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data.L.sqrt[!(fishID%in%remove)]), order.groups = FALSE)
Dark.sqrt <- groupedData(sqrty ~ t | fishID, data = as.data.frame(data.D.sqrt[!(fishID%in%remove)]), order.groups = FALSE)
avg_func <- function(...) {
avg <- mean(...,na.rm=TRUE)
SE <- stats::sd(..., na.rm=TRUE) / sqrt(length(...))
data.frame(y=avg, ymin=avg-SE, ymax=avg+SE)
}
# Plots
ggplot(data.L.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Light Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
ggplot(data.D.sqrt, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Dark Data: Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
normAIC <- function(zz) {
zz$AIC <- zz$AIC - min(zz$AIC)
indx <- order(zz$AIC)
zz[indx,]
}
ggplot(sample.L, aes(x=t,y=sqrty,fill=conc,color=conc)) +
stat_summary(fun.data=avg_func, geom="ribbon", alpha=0.5) +
stat_summary(fun.data=avg_func, geom="line") +
labs(title="Loperamide Exposure 16 Control Fish: Light Data Square-Root Transformed",
fill="Concentration", color="Concentration",
x="Time", y="Square-Root(y)")
nls(sqrty ~ logist(t, AsymU, AsymL, xmid, scal),
data = sample.L)
nls(sqrty ~ logist1(t, AsymU, AsymL, xmid, scal),
data = sample.L)
nls(sqrty ~ logist1(t, AsymU, AsymL, xmid, scal),
data = sample.L)
head(data)
knitr::opts_chunk$set(echo = TRUE)
library(nlme)
library(data.table)
library(ggplot2)
data.avg[!fishID%in%remove & wllq==1, mean(y,na.rm=TRUE), by=.(conc,t)]
load("../data/Padilla_DNT60_Loperamide.rda")
data <- copy(Padilla_DNT60_Loperamide)
data.avg <- copy(data)
remove <- data[is.na(y), unique(fishID)]
data.avg[!fishID%in%remove & wllq==1, mean(y,na.rm=TRUE), by=.(conc,t)]
data.avg[!fishID%in%remove & wllq==1, meany=mean(y,na.rm=TRUE), by=.(cpid,conc,t)]
data.avg[!fishID%in%remove & wllq==1, .(meany=mean(y,na.rm=TRUE)), by=.(cpid,conc,t)]
avg_by_time <- data.avg[!fishID%in%remove & wllq==1, .(meany=mean(y,na.rm=TRUE)), by=.(cpid,conc,t)]
